{
    "pipes": [],
    "interfaces": [
        {
            "name": "MenuItem",
            "id": "interface-MenuItem-005d179ccd29d5f8be5995cf0397ab3d",
            "file": "src/app/restaurant-detail/menu/menu-item.model.ts",
            "type": "interface",
            "sourceCode": "export interface MenuItem {\r\n  id: string,\r\n  name: string,\r\n  description: string,\r\n  price: number,\r\n  imagePath: string\r\n}\r\n",
            "properties": [
                {
                    "name": "description",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "imagePath",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "price",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Restaurant",
            "id": "interface-Restaurant-f2cdf5aebf7827b8b7849223c713a168",
            "file": "src/app/restaurant-detail/restaurant.model.ts",
            "type": "interface",
            "sourceCode": "export interface Restaurant {\r\n    id: string,\r\n    name: string,\r\n    category: string,\r\n    deliveryEstimate: string,\r\n    rating: number,\r\n    imagePath: string,\r\n    about?: string,\r\n    hours?: string\r\n  }\r\n  ",
            "properties": [
                {
                    "name": "about",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "category",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "deliveryEstimate",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "hours",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "imagePath",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "rating",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "OrderService",
            "id": "injectable-OrderService-e90e1f0908ca54fcebe549a826deb857",
            "file": "src/app/order/order.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "cartItems",
                    "args": [],
                    "optional": false,
                    "returnType": "CartItem[]",
                    "typeParameters": [],
                    "line": 23
                },
                {
                    "name": "checkOrder",
                    "args": [
                        {
                            "name": "order",
                            "type": "Order"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<string>",
                    "typeParameters": [],
                    "line": 44,
                    "jsdoctags": [
                        {
                            "name": "order",
                            "type": "Order",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39
                },
                {
                    "name": "decreaseQty",
                    "args": [
                        {
                            "name": "item",
                            "type": "CartItem"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "CartItem",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "increaseQty",
                    "args": [
                        {
                            "name": "item",
                            "type": "CartItem"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "CartItem",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "itemsValue",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 19
                },
                {
                    "name": "removeItem",
                    "args": [
                        {
                            "name": "item",
                            "type": "CartItem"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "CartItem",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { VILLE_API } from './../app.api';\r\nimport { Order } from './order.model';\r\nimport { CartItem } from './../restaurant-detail/shopping-cart/shopping-cart.model';\r\nimport { ShoppingCartService } from './../restaurant-detail/shopping-cart/shopping-cart.service';\r\n\r\n@Injectable()\r\nexport class OrderService {\r\n\r\n  constructor(\r\n    private cartService: ShoppingCartService,\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  itemsValue(): number {\r\n    return this.cartService.total();\r\n  }\r\n\r\n  cartItems(): CartItem[] {\r\n    return this.cartService.items;\r\n  }\r\n\r\n  increaseQty(item: CartItem) {\r\n    this.cartService.increaseQty(item);\r\n  }\r\n\r\n  decreaseQty(item: CartItem) {\r\n    this.cartService.decreaseQty(item);\r\n  }\r\n\r\n  removeItem(item: CartItem) {\r\n    this.cartService.removeItem(item);\r\n  }\r\n\r\n  clear() {\r\n    this.cartService.clear();\r\n  }\r\n\r\n  // checkOrder(order: Order): Observable<Order> {\r\n  checkOrder(order: Order): Observable<string> {\r\n    return this.http.post<Order>(\r\n      `${VILLE_API}/orders`,\r\n      order,\r\n    )\r\n      .pipe(map(order => order.id));\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "cartService",
                        "type": "ShoppingCartService"
                    },
                    {
                        "name": "http",
                        "type": "HttpClient"
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "cartService",
                        "type": "ShoppingCartService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ShoppingCartService",
            "id": "injectable-ShoppingCartService-a315e04d73e2b9707156e7318832784c",
            "file": "src/app/restaurant-detail/shopping-cart/shopping-cart.service.ts",
            "properties": [
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "type": "CartItem[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methods": [
                {
                    "name": "addItem",
                    "args": [
                        {
                            "name": "item",
                            "type": "MenuItem"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "MenuItem",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                },
                {
                    "name": "decreaseQty",
                    "args": [
                        {
                            "name": "item",
                            "type": "CartItem"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "CartItem",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "increaseQty",
                    "args": [
                        {
                            "name": "item",
                            "type": "CartItem"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "CartItem",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeItem",
                    "args": [
                        {
                            "name": "item",
                            "type": "CartItem"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "CartItem",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "total",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 46
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\nimport { MenuItem } from './../menu/menu-item.model';\r\nimport { CartItem } from './shopping-cart.model';\r\nimport { NotificationService } from './../../shared/messages/notification.service';\r\n\r\n@Injectable()\r\nexport class ShoppingCartService {\r\n  items: CartItem[] = [];\r\n\r\n  constructor(private notificationService: NotificationService) {}\r\n  clear() {\r\n    this.items = [];\r\n  }\r\n\r\n  addItem(item: MenuItem) {\r\n    let foundItem = this.items.find(\r\n      (mItem) => mItem.menuItem.id === item.id\r\n    );\r\n\r\n    if (foundItem) {\r\n      this.increaseQty(foundItem);\r\n    } else {\r\n      this.items.push(new CartItem(item));\r\n    }\r\n    this.notificationService.notify(`Você adicionou o item ${item.name}`);\r\n  }\r\n\r\n  increaseQty(item: CartItem) {\r\n    item.quantity = item.quantity + 1;\r\n  }\r\n\r\n  decreaseQty(item: CartItem) {\r\n    item.quantity = item.quantity - 1;\r\n\r\n    if (item.quantity === 0) {\r\n      this.removeItem(item);\r\n    }\r\n  }\r\n\r\n  removeItem(item: CartItem) {\r\n    this.items.splice(this.items.indexOf(item), 1);\r\n    this.notificationService.notify(`Você adicionou o item ${item.menuItem.name}`);\r\n  }\r\n\r\n  total(): number {\r\n    return this.items\r\n      .map(item => item.value())\r\n      .reduce((prev, value) => prev + value, 0);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "notificationService",
                        "type": "NotificationService"
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "notificationService",
                        "type": "NotificationService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-ee2067dfb1c303f41003aea7d82d51e0",
            "file": "e2e/src/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  async navigateTo(): Promise<unknown> {\n    return browser.get(browser.baseUrl);\n  }\n\n  async getTitleText(): Promise<string> {\n    return element(by.css('app-root .content span')).getText();\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<unknown>",
                    "typeParameters": [],
                    "line": 4,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CartItem",
            "id": "class-CartItem-453be67bf8acd163eb820d4c5d8bd469",
            "file": "src/app/restaurant-detail/shopping-cart/shopping-cart.model.ts",
            "type": "class",
            "sourceCode": "import { MenuItem } from './../menu/menu-item.model';\r\nexport class CartItem {\r\n  constructor(\r\n    public menuItem: MenuItem,\r\n    public quantity = 1\r\n  ) { }\r\n\r\n  value(): number {\r\n    return this.menuItem.price * this.quantity;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "menuItem",
                        "type": "MenuItem"
                    },
                    {
                        "name": "quantity",
                        "type": "number",
                        "defaultValue": "1"
                    }
                ],
                "line": 2,
                "jsdoctags": [
                    {
                        "name": "menuItem",
                        "type": "MenuItem",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "quantity",
                        "type": "number",
                        "defaultValue": "1",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "menuItem",
                    "type": "MenuItem",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "quantity",
                    "defaultValue": "1",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [
                {
                    "name": "value",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "NotificationService",
            "id": "class-NotificationService-a1a3ca5190ad2fb3e7084e116da05430",
            "file": "src/app/shared/messages/notification.service.ts",
            "type": "class",
            "sourceCode": "import { EventEmitter } from '@angular/core';\r\nexport class NotificationService {\r\n  notifier = new EventEmitter<any>();\r\n\r\n  notify(message: string) {\r\n    this.notifier.emit(message);\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "notifier",
                    "defaultValue": "new EventEmitter<any>()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "methods": [
                {
                    "name": "notify",
                    "args": [
                        {
                            "name": "message",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 5,
                    "jsdoctags": [
                        {
                            "name": "message",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Order",
            "id": "class-Order-53d039b2f900af410e3744c700e56359",
            "file": "src/app/order/order.model.ts",
            "type": "class",
            "sourceCode": "class Order {\r\n  constructor(\r\n    public address: string,\r\n    public number: number,\r\n    public optionalAddress: string,\r\n    public paymentOption: string,\r\n    public orderItems: OrderItem[] = [],\r\n    public id?: string,\r\n    public name?: string,\r\n    public phone?: string\r\n  ) {}\r\n}\r\n\r\nclass OrderItem {\r\n  constructor(\r\n    public quantity: number,\r\n    public menuId: string,\r\n    public name: string\r\n  ) {}\r\n}\r\n\r\nexport {\r\n  Order,\r\n  OrderItem\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "address",
                        "type": "string"
                    },
                    {
                        "name": "number",
                        "type": "number"
                    },
                    {
                        "name": "optionalAddress",
                        "type": "string"
                    },
                    {
                        "name": "paymentOption",
                        "type": "string"
                    },
                    {
                        "name": "orderItems",
                        "type": "OrderItem[]",
                        "defaultValue": "[]"
                    },
                    {
                        "name": "id",
                        "type": "string",
                        "optional": true
                    },
                    {
                        "name": "name",
                        "type": "string",
                        "optional": true
                    },
                    {
                        "name": "phone",
                        "type": "string",
                        "optional": true
                    }
                ],
                "line": 1,
                "jsdoctags": [
                    {
                        "name": "address",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "number",
                        "type": "number",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "optionalAddress",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "paymentOption",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "orderItems",
                        "type": "OrderItem[]",
                        "defaultValue": "[]",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "id",
                        "type": "string",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "name",
                        "type": "string",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "phone",
                        "type": "string",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "address",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "id",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "number",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "optionalAddress",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "orderItems",
                    "defaultValue": "[]",
                    "type": "OrderItem[]",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "paymentOption",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "phone",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "OrderItem",
            "id": "class-OrderItem-53d039b2f900af410e3744c700e56359",
            "file": "src/app/order/order.model.ts",
            "type": "class",
            "sourceCode": "class Order {\r\n  constructor(\r\n    public address: string,\r\n    public number: number,\r\n    public optionalAddress: string,\r\n    public paymentOption: string,\r\n    public orderItems: OrderItem[] = [],\r\n    public id?: string,\r\n    public name?: string,\r\n    public phone?: string\r\n  ) {}\r\n}\r\n\r\nclass OrderItem {\r\n  constructor(\r\n    public quantity: number,\r\n    public menuId: string,\r\n    public name: string\r\n  ) {}\r\n}\r\n\r\nexport {\r\n  Order,\r\n  OrderItem\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "quantity",
                        "type": "number"
                    },
                    {
                        "name": "menuId",
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "quantity",
                        "type": "number",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "menuId",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "name",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "menuId",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "quantity",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "RadioOption",
            "id": "class-RadioOption-7a995b9f6434dc5939b3e8c843dd8dec",
            "file": "src/stories/components/radio-button/radio-option.model.ts",
            "type": "class",
            "sourceCode": "export class RadioOption {\r\n  constructor(public label: string, public value: any) { }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "label",
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "type": "any"
                    }
                ],
                "line": 1,
                "jsdoctags": [
                    {
                        "name": "label",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "value",
                        "type": "any",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "label",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "value",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 2,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AboutComponent",
            "id": "component-AboutComponent-75b8a66439c7aeaa85559e51ada13561",
            "file": "src/app/about/about.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-about",
            "styleUrls": [
                "./about.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./about.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "div {\r\n  text-align: justify;\r\n}\r\nh1 {\r\n padding: 25px 25px 20px 25px; \r\n}\r\np {\r\n  padding: 12px 25px 0 25px;\r\n}\r\n",
                    "styleUrl": "./about.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<storybook-square-white classWrapper=\"true\">\n  <div>\n    <h1>Sobre</h1>\n    \n    <p>\n      Whisky Ville | Aplication\n    </p>\n    <p>\n      MIT license\n    </p>\n    <p>\n      Copyright 2020 Whisky Ville\n    </p>\n    <p>\n      Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n    </p>\n    <p>\n      The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n    </p>\n  </div>\n</storybook-square-white>\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-304a6d397a1002777e42257a5d828864",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit(): void { }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\r\n  margin: 0;\r\n  height: 100vh;\r\n}\r\n\r\n.wrapper-header {\r\n  height: 12vh;\r\n}\r\n\r\n.wrapper-content {\r\n  height: 81vh;\r\n}\r\n\r\n@media (max-width: 1100px) {\r\n  .wrapper-content {\r\n    height: 76vh;\r\n  }\r\n}",
                    "styleUrl": "./app.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"wrapper\">\r\n  <div class=\"wrapper-header\">\r\n    <app-header></app-header>\r\n  </div>\r\n  <div class=\"wrapper-content\">\r\n    <router-outlet></router-outlet>\r\n    <app-snackbar></app-snackbar>\r\n    <app-footer></app-footer>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-d840f49fde97bea3b1a528585bdda3aa",
            "file": "src/stories/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "line": 10,
                    "type": "boolean"
                },
                {
                    "name": "fontBlack",
                    "defaultValue": "false",
                    "line": 11,
                    "type": "boolean"
                },
                {
                    "name": "icon",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "'Story-Button'",
                    "line": 14
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "line": 9,
                    "type": "boolean"
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "line": 13,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 17,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.css']\n})\nexport class ButtonComponent implements OnInit {\n  @Input() primary: boolean = false;\n  @Input() disabled: boolean = false;\n  @Input() fontBlack: boolean = false;\n  @Input() backgroundColor?: string;\n  @Input() size: 'small' | 'medium' | 'large' = 'medium';\n  @Input() label = 'Story-Button';\n  @Input() icon: string;\n\n  @Output() onClick = new EventEmitter<Event>();\n  \n  constructor() { }\n\n  ngOnInit(): void { }\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n    \n    if (this.fontBlack) {\n      return ['storybook-button', `storybook-button--${this.size}`, 'font-black'];  \n    }\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\r\n    font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n    font-weight: 700;\r\n    border: 0;\r\n    border-radius: 3em;\r\n    cursor: pointer;\r\n    display: inline-block;\r\n    outline-style: none;\r\n    line-height: 1;\r\n}\r\n.storybook-button--primary {\r\n    color: var(--color-button-text);\r\n    background-color: var(--color-primary);\r\n    box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\r\n}\r\n.storybook-button--primary:hover {\r\n    background-color: var(--color-primary-darker);\r\n    box-shadow: rgba(250, 250, 250, 0.15) 0px 0px 0px 1px inset;\r\n}\r\n.storybook-button--secondary {\r\n    color: var(--color-button-text);\r\n    background-color: transparent;\r\n    box-shadow: rgba(250, 250, 250, 0.15) 0px 0px 0px 1px inset;\r\n}\r\n.storybook-button--secondary:hover {\r\n    background-color: var(--color-text-title);\r\n    color: var(--color-button-text);\r\n    box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\r\n}\r\n.font-black {\r\n    background-color: transparent;\r\n    color: var(--color-text-title);\r\n    box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\r\n}\r\n.font-black:hover {\r\n    background-color: var(--color-text-title);\r\n    color: var(--color-button-text);\r\n    box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\r\n}\r\n\r\nbutton:disabled,\r\nbutton[disabled] {\r\n  border: 1px solid #999999;\r\n  background-color: #cccccc;\r\n  color: #666666;\r\n}\r\n\r\nbutton:disabled:hover,\r\nbutton[disabled]:hover {\r\n  border: 1px solid #999999;\r\n  background-color: #cccccc;\r\n  color: #666666;\r\n  cursor: auto;\r\n}\r\n\r\n.storybook-button--small {\r\n    font-size: 12px;\r\n    padding: 10px 16px;\r\n}\r\n\r\n.storybook-button--medium {\r\n    font-size: 14px;\r\n    padding: 11px 20px;\r\n}\r\n\r\n.storybook-button--large {\r\n    font-size: 16px;\r\n    padding: 12px 24px;\r\n}\r\n  ",
                    "styleUrl": "./button.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 17
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 23
                    }
                }
            },
            "templateData": "<button type=\"button\"\n        (click)=\"onClick.emit($event)\"\n        [ngClass]=\"classes\"\n        [disabled]=\"disabled\"\n        [ngStyle]=\"{ 'background-color': backgroundColor }\">\n    <i [class]=\"icon\"></i>\n    {{ label }}\n</button>"
        },
        {
            "name": "CardItemComponent",
            "id": "component-CardItemComponent-3abc0ec9233d13b251b79db5b966690f",
            "file": "src/app/restaurant-detail/menu/card-item/card-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-card-item",
            "styleUrls": [
                "./card-item.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./card-item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "menuItem",
                    "line": 21,
                    "type": "MenuItem"
                }
            ],
            "outputsClass": [
                {
                    "name": "add",
                    "defaultValue": "new EventEmitter()",
                    "line": 22,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "menuItemState",
                    "defaultValue": "'ready'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "emitAddEvent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { trigger, transition, state, style, animate } from '@angular/animations';\r\n\r\nimport { MenuItem } from '../menu-item.model';\r\n\r\n@Component({\r\n  selector: 'storybook-card-item',\r\n  templateUrl: './card-item.component.html',\r\n  styleUrls: ['./card-item.component.css'],\r\n  animations: [\r\n    trigger('menuItemAppeared', [\r\n      state('ready', style({ opacity: 1 })),\r\n      transition('void => ready', [\r\n        style({ opacity: 0, transform: 'translateY(-20px)'}),\r\n        animate('300ms 0s ease-in')\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class CardItemComponent implements OnInit {\r\n  @Input() menuItem: MenuItem;\r\n  @Output() add = new EventEmitter();\r\n  \r\n  menuItemState = 'ready';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  emitAddEvent() {\r\n    this.add.emit(this.menuItem); \r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\r\n    margin-bottom: 6px;\r\n}\r\n.wrapper-card {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 200px;\r\n}\r\n.wrapper-card > img {\r\n    width: 140px;\r\n    padding: 20px 10px;\r\n}\r\n.content-description {\r\n    display: grid;\r\n    text-align: justify;\r\n    width: 100%;\r\n    padding: 20px;\r\n    color: var(--color-text-base);\r\n}\r\n.content-description > h1 {\r\n    height: 25px;\r\n    font-size: large;\r\n}\r\n.content-description > span {\r\n    overflow: hidden !important;\r\n    text-overflow: ellipsis !important;\r\n    height: 99px;\r\n}\r\n.content-price {\r\n    padding-top: 10px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    font-weight: 600;\r\n    color: var(--color-text-title);\r\n    height: 25px;\r\n}\r\n.content-price > a {\r\n    cursor: pointer;\r\n    color: var(--color-primary);\r\n}\r\n.content-price > a:hover {\r\n    color: var(--color-primary-darker);\r\n}\r\n\r\n@media (max-width: 1100px) {\r\n    .wrapper-card > img {\r\n        width: 90px;\r\n        padding: 30px 10px;\r\n    }\r\n    .content-description > span {\r\n        margin-top: 0;\r\n    }\r\n}\r\n",
                    "styleUrl": "./card-item.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 24
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section>\r\n  <storybook-square-white classContent=\"content content-width-10\">\r\n    <div class=\"wrapper-card\" [@menuItemAppeared]=\"menuItemState\">\r\n      <img [src]=\"menuItem.imagePath\">\r\n\r\n      <div class=\"content-description\">\r\n        <h1>\r\n          {{ menuItem.name }}\r\n        </h1>\r\n        <span>\r\n          {{ menuItem.description }}\r\n        </span>\r\n        <div class=\"content-price\">\r\n          <span>\r\n            {{ menuItem.price | currency: 'BRL': 'symbol' }}\r\n          </span>\r\n          <a (click)=\"emitAddEvent()\">\r\n            <i class=\"fa fa-plus-circle\"></i>\r\n            Adicionar\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </storybook-square-white>\r\n</section>"
        },
        {
            "name": "DeliveryCostsComponent",
            "id": "component-DeliveryCostsComponent-b641b3113b306e9c02393116bc0d49eb",
            "file": "src/app/order/delivery-costs/delivery-costs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-delivery-costs",
            "styleUrls": [
                "./delivery-costs.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./delivery-costs.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "delivery",
                    "line": 10,
                    "type": "number"
                },
                {
                    "name": "itemsValue",
                    "line": 11,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                },
                {
                    "name": "total",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 18
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-delivery-costs',\n  templateUrl: './delivery-costs.component.html',\n  styleUrls: ['./delivery-costs.component.css']\n})\nexport class DeliveryCostsComponent implements OnInit {\n\n  @Input() delivery: number;\n  @Input() itemsValue: number;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  total(): number {\n    return this.delivery + this.itemsValue;\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "table {\r\n    height: 100%;\r\n    width: 100%;\r\n}\r\ntr {\r\n    /* color: var(); */\r\n    margin-bottom: 12px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    border-bottom: 1px solid var(--color-background);\r\n}\r\n\r\nth {\r\n    color: var(--color-text-base);\r\n}\r\n\r\ntd {\r\n    color: var(--color-text-base);\r\n}\r\n",
                    "styleUrl": "./delivery-costs.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<table>\n  <tbody>\n    <tr>\n      <th>Itens:</th>\n      <td>\n        {{ itemsValue | currency: 'BRL': 'symbol' }}\n      </td>\n    </tr>\n    <tr>\n      <th>Frete:</th>\n      <td>\n        {{ delivery | currency: 'BRL': 'symbol' }}\n      </td>\n    </tr>\n    <tr>\n      <th>Total:</th>\n      <td>\n        {{ total() | currency: 'BRL': 'symbol' }}\n      </td>\n    </tr>\n  </tbody>\n</table>\n"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-29c03aa3a1e21c771e991c7f9c97796a",
            "file": "src/app/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-footer",
            "styleUrls": [
                "./footer.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper-footer {\r\n    text-align: center;\r\n    padding-bottom: 30px;\r\n}\r\n",
                    "styleUrl": "./footer.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<footer class=\"wrapper-footer\">\n    <p>\n        <b>Ville</b> angular application, <b>Version</b> 11.2.3\n    </p>\n</footer>"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-10c4d8fd1458e62b7a1f3b54b7d29a1f",
            "file": "src/app/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [
                "./header.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "titleHeader",
                    "defaultValue": "\"Whisky Ville\"",
                    "line": 10
                }
            ],
            "outputsClass": [
                {
                    "name": "onAbout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 11,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "navigateAbout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  @Input() titleHeader = \"Whisky Ville\";\r\n  @Output() onAbout = new EventEmitter<Event>();\r\n  \r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  navigateAbout() {\r\n    this.router.navigate(['/about']);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper-header {\r\n  border-bottom: 1px solid rgba(0, 0.1, 0, 0);\r\n  background-color: var(--color-primary);\r\n  padding: 15px 20%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin: 0;\r\n\r\n  /* Impedir seleção do texto. */\r\n  -webkit-touch-callout: none;\r\n  -webkit-user-select: none;\r\n  -khtml-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n}\r\nsvg {\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\nh1 {\r\n  font-weight: 900;\r\n  font-size: 20px;\r\n  line-height: 1;\r\n  margin: 6px 0 6px 10px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n  color: var(--color-box-white);\r\n}\r\n\r\n@media (max-width: 1100px) {\r\n  .wrapper-header {\r\n    padding: 15px 30px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./header.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<header>\r\n  <div class=\"wrapper-header\">\r\n    <div>\r\n      <a [routerLink]=\"['/']\">\r\n        <svg  width=\"32\"\r\n              height=\"32\"\r\n              viewBox=\"0 0 32 32\"\r\n              xmlns=\"http://www.w3.org/2000/svg\">\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\r\n                  fill=\"#FFF\"/>\r\n            <path d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\r\n                  fill=\"#555AB9\"/>\r\n            <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\r\n                  fill=\"#91BAF8\"/>\r\n          </g>\r\n        </svg>\r\n\r\n        <h1>{{ titleHeader }}</h1>\r\n      </a>\r\n    </div>\r\n\r\n    <div>\r\n      <storybook-button size=\"small\"\r\n                        (onClick)=\"navigateAbout()\"\r\n                        label=\"Sobre\">\r\n      </storybook-button>\r\n    </div>\r\n  </div>\r\n</header>\r\n"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-aa90825bea29eacef2e1b82b28eca078",
            "file": "src/app/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "./home.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "navigateRestaurant",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void { }\n\n  navigateRestaurant() {\n    this.router.navigate(['/restaurant/jack-daniels']);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "h1 {\r\n    color: var(--color-text-title);\r\n    padding-top: 116px;\r\n    font-size: xxx-large;\r\n}\r\np {\r\n    padding: 15px 0 36px 0;\r\n}\r\n",
                    "styleUrl": "./home.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<storybook-square-white classWrapper=\"true\">\r\n  <h1>Bem vindo ao Whisky Ville!</h1>\r\n  \r\n  <p>\r\n    Bora beber? Peça e receba em casa.\r\n  </p>\r\n  <storybook-button primary=\"true\"\r\n                    label=\"Comprar\"\r\n                    (onClick)=\"navigateRestaurant()\"\r\n                    size=\"large\">\r\n  </storybook-button>\r\n</storybook-square-white>\r\n"
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-df140c48157ffa173b53fa987a27adfa",
            "file": "src/app/shared/input/input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-input-container",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "errorMessage",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "label",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "showTip",
                    "defaultValue": "true",
                    "line": 12,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "control",
                    "type": "FormControlName",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "FormControlName"
                        }
                    ]
                },
                {
                    "name": "input",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "model",
                    "type": "NgModel",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "NgModel"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "hasError",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 36
                },
                {
                    "name": "hasSuccess",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 32
                },
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ContentChild, AfterContentInit } from '@angular/core';\nimport { FormControlName, NgModel } from '@angular/forms';\n\n@Component({\n  selector: 'app-input-container',\n  templateUrl: './input.component.html'\n})\nexport class InputComponent implements OnInit, AfterContentInit {\n\n  @Input() label: string;\n  @Input() errorMessage: string;\n  @Input() showTip: boolean = true;\n\n  input: any;\n\n  @ContentChild(NgModel) model: NgModel;\n  @ContentChild(FormControlName) control: FormControlName;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterContentInit() {\n    this.input = this.model || this.control;\n\n    if (this.input === undefined) {\n      throw new Error('Esse componente precisa ser usado com uma diretiva ngModel ou formControlName.');\n    }\n  }\n\n  hasSuccess(): boolean {\n    return this.input.valid && (this.input.dirty || this.input.touched);\n  }\n\n  hasError(): boolean {\n    return this.input.invalid && (this.input.dirty || this.input.touched);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 17
            },
            "implements": [
                "OnInit",
                "AfterContentInit"
            ],
            "templateData": "<div\n  class=\"form-group has-feedback\"\n  [class.has-success]=\"hasSuccess()\"\n  [class.has-error]=\"hasError()\"\n>\n  <label class=\"control-label sr-only\" for=\"inputSuccess\">\n    <i class=\"fa fa-check\"></i> {{ label }}\n  </label>\n  <ng-content></ng-content>\n  <span\n    class=\"help-block\"\n    *ngIf=\"showTip && hasSuccess()\"\n  >\n    <i class=\"fa fa-check\"></i> Ok\n  </span>\n  <span\n    class=\"help-block\"\n    *ngIf=\"showTip && hasError()\"\n  >\n  <i class=\"fa fa-remove\"></i> {{ errorMessage }}\n  </span>\n</div>\n"
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-b423a16e8b85ad7caf0e2256ed053da5-1",
            "file": "src/stories/components/input/input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-input",
            "styleUrls": [
                "./input.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "placeHolder",
                    "defaultValue": "'Story-Input'",
                    "line": 9
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-input',\r\n  templateUrl: './input.component.html',\r\n  styleUrls: ['./input.component.css']\r\n})\r\nexport class InputComponent implements OnInit {\r\n  @Input() placeHolder = 'Story-Input';\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit(): void { }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "input {\r\n  color: var(--color-text-base);\r\n  margin: 0;\r\n}\r\n\r\n.input-block {\r\n  position: relative;\r\n}\r\n\r\n.input-block input {\r\n  width: 100%;\r\n  height: 2rem;\r\n  border-radius: 0.8rem;\r\n  background: var(--color-box-white);\r\n  border: 1px solid var(--color-line-in-white);\r\n  outline: 0;\r\n  padding: 0 1rem;\r\n  font: 1.1rem Archivo;\r\n}\r\n\r\n.input-block:focus-within::after {\r\n  width: calc(100% + 0.1rem);\r\n  height: 2px;\r\n  content: \"\";\r\n  background: var(--color-primary-light);\r\n  position: absolute;\r\n  left: 1rem;\r\n  right: 1rem;\r\n  margin-bottom: 7px;\r\n  bottom: 0;\r\n}\r\n\r\n.input-block-20 input {\r\n  width: 20%;\r\n  height: 2rem;\r\n  border-radius: 0.8rem;\r\n  background: var(--color-box-white);\r\n  border: 1px solid var(--color-line-in-white);\r\n  outline: 0;\r\n  padding: 0 1rem;\r\n  font: 1.1rem Archivo;\r\n}\r\n\r\n.input-block-20:focus-within::after {\r\n  width: calc(100% + 0.1rem);\r\n  height: 2px;\r\n  content: \"\";\r\n  background: var(--color-primary-light);\r\n  position: absolute;\r\n  left: 1rem;\r\n  right: 1rem;\r\n  margin-bottom: 7px;\r\n  bottom: 0;\r\n}\r\n\r\n@media (max-width: 1100px) {\r\n  .input-block input {\r\n    font: 0.92rem Archivo;\r\n  }\r\n\r\n  .input-block-20 input {\r\n    font: 0.92rem Archivo;\r\n  }\r\n}",
                    "styleUrl": "./input.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "InputComponent-1",
            "templateData": "<div class=\"input-block\">\r\n  <input  type=\"text\"\r\n          [placeholder]=\"placeHolder\"\r\n          autocomplete=\"off\" />\r\n</div>"
        },
        {
            "name": "MenuComponent",
            "id": "component-MenuComponent-917db0f76cda41ade8bc6270c2b48c12",
            "file": "src/app/restaurant-detail/menu/menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-menu",
            "styleUrls": [
                "./menu.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "menu",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "getDB",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29
                },
                {
                    "name": "mockDB",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { VILLE_API } from 'src/app/app.api';\nimport { Restaurant } from '../restaurant.model';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n  // menu: Observable<any>;\n  menu: any;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    let db = false;\n\n    if (db) {\n      this.getDB();\n    } else {\n      this.mockDB();\n    }\n  }\n\n  getDB() {\n    this.menu = this.http\n      .get<Restaurant>(`${VILLE_API}/restaurants/bread-bakery/menu`)\n  }\n\n  mockDB() {\n    this.menu = [\n      {\n        \"id\": \"jack-daniels-black\",\n        \"imagePath\": \"assets/img/foods/jack-daniels-black.png\",\n        \"name\": \"Jack Daniels\",\n        \"description\": \"Diferencia-se pelo seu cuidadoso processo de elaboração, destilação e envelhecimento.\",\n        \"price\": 136.99,\n        \"restaurantId\": \"bread-bakery\"\n      },\n      {\n        \"id\": \"jack-daniels-fire\",\n        \"imagePath\": \"assets/img/foods/jack-daniels-fire.png\",\n        \"name\": \"Jack Daniels Fire\",\n        \"description\": \" Jack Daniels Fire destaca-se pela mistura natural de licor de canela picante com o clássico whiskey Americano Jack Daniels.\",\n        \"price\": 149.90,\n        \"restaurantId\": \"bread-bakery\"\n      },\n      {\n        \"id\": \"jack-daniels-honey\",\n        \"imagePath\": \"assets/img/foods/jack-daniels-honey.png\",\n        \"name\": \"Jack Daniels Honey\",\n        \"description\": \"Suavidade do Jack Daniel levemente temperada com mel.\",\n        \"price\": 136.90,\n        \"restaurantId\": \"bread-bakery\"\n      },\n      {\n        \"id\": \"jack-daniels-apple\",\n        \"imagePath\": \"assets/img/foods/jack-daniels-apple.png\",\n        \"name\": \"Jack Daniels Apple\",\n        \"description\": \"A nova bebida é a mistura do clássico Jack Daniels Tennessee Whiskey com licor de maçã.\",\n        \"price\": 134.90,\n        \"restaurantId\": \"bread-bakery\"\n      }\n    ];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper-menu {\r\n    height: 100%;\r\n    width: 100%;\r\n    margin: 12px 0 20px 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n.content {\r\n    display: flex;\r\n    width: 70%;\r\n}\r\n.content-card {\r\n    width: 60%;\r\n}\r\n.content-cart {\r\n    width: 40%;\r\n}\r\n\r\n@media (max-width: 1100px) {\r\n    .content {\r\n      display: inline;\r\n      width: 100%;\r\n    }\r\n    .content-card {\r\n        width: 100%;\r\n    }\r\n    .content-cart {\r\n        width: 100%;\r\n    }\r\n}\r\n",
                    "styleUrl": "./menu.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient"
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"wrapper-menu\">\r\n  <div class=\"content\">\r\n    <div class=\"content-card\">\r\n      <!-- *ngFor=\"let item of menu | async\" -->\r\n      <storybook-card-item\r\n        *ngFor=\"let item of menu\"\r\n        [menuItem]=\"item\"\r\n        (add)=\"shoppingCart.addItem($event)\"\r\n      >\r\n      </storybook-card-item>\r\n    </div>\r\n\r\n    <div class=\"content-cart\">\r\n      <app-shopping-cart #shoppingCart></app-shopping-cart>\r\n    </div>\r\n  </div>\r\n</section>\r\n"
        },
        {
            "name": "NotFoundComponent",
            "id": "component-NotFoundComponent-a32cd05f022e0efb68617735bd10f4bc",
            "file": "src/app/not-found/not-found.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-not-found",
            "styleUrls": [
                "./not-found.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./not-found.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void { }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "img {\r\n    padding-top: 45px;\r\n}\r\np {\r\n    padding-top: 7px;\r\n}\r\na {\r\n    color: var(--color-text-title);\r\n}\r\na:hover {\r\n    color: var(--color-primary-darker);\r\n}",
                    "styleUrl": "./not-found.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<storybook-square-white classWrapper=\"true\">\n  <img src=\"assets/img/404.png\" />\n\n  <h2>Página Não Encontrada</h2>\n  \n  <p>\n    Está com fome? Acesse a página do\n    <a [routerLink]=\"['/restaurant/jack-daniels']\">\n      <b>Jack Daniel's</b>\n    </a>.\n  </p>\n</storybook-square-white>"
        },
        {
            "name": "OrderComponent",
            "id": "component-OrderComponent-8fffb9e209ae223d45782e8776f4543e",
            "file": "src/app/order/order.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-order",
            "styleUrls": [
                "./order.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./order.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "delivery",
                    "defaultValue": "3.99",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "numberPattern",
                    "defaultValue": "/^[0-9]*$/",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "orderForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "orderId",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "paymentOptions",
                    "defaultValue": "[\n    { label: 'Dinheiro', value: 'Dinheiro' },\n    { label: 'Cartão de débito', value: 'Cartão Débito' },\n    { label: 'Vale refeição', value: 'Vale Refeição' }\n  ]",
                    "type": "RadioOption[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "whatsApp",
                    "defaultValue": "null",
                    "type": "null",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "cartItems",
                    "args": [],
                    "optional": false,
                    "returnType": "CartItem[]",
                    "typeParameters": [],
                    "line": 62
                },
                {
                    "name": "checkOrder",
                    "args": [
                        {
                            "name": "order",
                            "type": "Order"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "jsdoctags": [
                        {
                            "name": "order",
                            "type": "Order",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "decreaseQty",
                    "args": [
                        {
                            "name": "item",
                            "type": "CartItem"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "CartItem",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "increaseQty",
                    "args": [
                        {
                            "name": "item",
                            "type": "CartItem"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "CartItem",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isOrderCompleted",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 78
                },
                {
                    "name": "itemsValue",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 58
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35
                },
                {
                    "name": "removeItem",
                    "args": [
                        {
                            "name": "item",
                            "type": "CartItem"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "CartItem",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { tap } from 'rxjs/operators';\n\nimport { Order, OrderItem } from './order.model';\nimport { OrderService } from './order.service';\nimport { CartItem } from './../restaurant-detail/shopping-cart/shopping-cart.model';\nimport { RadioOption } from '../../stories/components/radio-button/radio-option.model';\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.css']\n})\nexport class OrderComponent implements OnInit {\n  numberPattern = /^[0-9]*$/;\n  orderForm: FormGroup;\n  delivery = 3.99;\n  orderId: string;\n  whatsApp = null;\n\n  paymentOptions: RadioOption[] = [\n    { label: 'Dinheiro', value: 'Dinheiro' },\n    { label: 'Cartão de débito', value: 'Cartão Débito' },\n    { label: 'Vale refeição', value: 'Vale Refeição' }\n  ];\n\n  constructor(\n    private orderService: OrderService,\n    private router: Router,\n    private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.orderForm = this.formBuilder.group({\n      name: this.formBuilder.control(\n        '',\n        [Validators.required, Validators.minLength(5)]\n      ),\n      phone: this.formBuilder.control(\n        '',\n        [Validators.required, Validators.pattern(this.numberPattern)]\n      ),\n      address: this.formBuilder.control(\n        '',\n        [Validators.required, Validators.minLength(5)]\n      ),\n      number: this.formBuilder.control(\n        '',\n        [Validators.required, Validators.pattern(this.numberPattern)]\n      ),\n      optionalAddress: new FormControl('', { updateOn: 'blur' }),\n      paymentOption: this.formBuilder.control('', [Validators.required])\n    });\n  }\n\n  itemsValue(): number {\n    return this.orderService.itemsValue();\n  }\n\n  cartItems(): CartItem[] {\n    return this.orderService.cartItems();\n  }\n\n  increaseQty(item: CartItem) {\n    this.orderService.increaseQty(item);\n  }\n\n  decreaseQty(item: CartItem) {\n    this.orderService.decreaseQty(item);\n  }\n\n  removeItem(item: CartItem) {\n    this.orderService.removeItem(item);\n  }\n\n  isOrderCompleted(): boolean {\n    return this.orderId !== undefined;\n  }\n\n  checkOrder(order: Order) {\n    let db = false;\n    let itens = [];\n    \n    order.orderItems = this\n      .cartItems()\n      .map((item: CartItem) => new OrderItem(\n        item.quantity,\n        item.menuItem.id,\n        item.menuItem.name\n        ));\n        \n    itens = order.orderItems.map(item => (` (${item.quantity}) ${item.name}`));\n        \n    if (db) {\n      this.orderService\n        .checkOrder(order)\n        .pipe(tap((orderId: string) => {\n          this.orderId = orderId;\n      })).subscribe((orderId: string) => {\n        this.orderService.clear();\n      });\n    }\n\n    this.whatsApp =\n      `https://wa.me/5547988458640/?text=` +\n      `Olá VilleMeat, gostaria de${itens}. ` +\n      `Pagamento: ${order.paymentOption}. ` +\n      `Entregar no endereço: ${order.address}, Nº ${order.number}. ` +\n      `(Ass. ${order.name}, ${order.phone})`;\n\n    // window.location.href = this.whatsApp; \n    this.router.navigate(['/order-summary']);\n    window.open(this.whatsApp, '_blank');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".body {\r\n    margin-bottom: 25px;\r\n}\r\n\r\nform {\r\n    margin: 18px 55px 50px 20px;\r\n    min-height: 80%;\r\n    text-align: left;\r\n}\r\n\r\n.box-header {\r\n    border-bottom: 1px solid var(--color-background);\r\n    color: var(--color-text-base);\r\n    padding-bottom: 7px;\r\n    margin-bottom: 15px;\r\n    display: flex;\r\n    justify-content: left;\r\n    align-items: center;\r\n}\r\n\r\n.box-header > p {\r\n    color: var(--color-text-base);\r\n    margin-left: 13px;\r\n    font-size: large;\r\n}\r\n\r\n.box-info-user > p {\r\n    font-size: large;\r\n    margin-bottom: 6px;\r\n}\r\n\r\n.box-input-user {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    margin-bottom: 18px;\r\n}\r\n\r\n.box-input-name {\r\n    width: 50%;\r\n}\r\n\r\n.box-input-phone {\r\n    width: 50%;\r\n    margin-left: 6%;\r\n}\r\n\r\n.box-info-address > p {\r\n    font-size: large;\r\n    margin-bottom: 6px;\r\n}\r\n\r\n.wrapper-address {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    margin-bottom: 18px;\r\n}\r\n\r\n.box-input-address {\r\n    width: 50%;\r\n}\r\n\r\n.box-input-number {\r\n    width: 19%;\r\n    margin-left: 6%;\r\n}\r\n\r\n.box-input-optional {\r\n    width: 25%;\r\n    margin-left: 6%;\r\n}\r\n\r\n.box-itens {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 104%;\r\n    margin-bottom: 18px;\r\n}\r\n\r\n.content-itens {\r\n    width: 104%;\r\n}\r\n\r\n.content-itens > p {\r\n    font-size: large;\r\n    margin-bottom: 6px;\r\n}\r\n\r\n.box-payment {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 103%;\r\n    margin-bottom: 18px;\r\n}\r\n\r\n.content-payment {\r\n    width: 70%;\r\n}\r\n\r\n.content-payment > p {\r\n    font-size: large;\r\n    margin-bottom: 6px;\r\n}\r\n\r\n.content-delivery {\r\n    width: 30%;\r\n    text-align: left;\r\n}\r\n\r\n.content-delivery > p {\r\n    font-size: large;\r\n    margin-bottom: 6px;\r\n}\r\n\r\n.box-footer {\r\n    height: 20%;\r\n    width: 97.6%;\r\n    padding-bottom: 15px;\r\n    text-align: right;\r\n}\r\n\r\n.button-back {\r\n    margin-right: 10px;\r\n}\r\n\r\np {\r\n    color: var(--color-text-title);\r\n}\r\n\r\n@media (max-width: 1100px) {\r\n    .body {\r\n      height: auto;\r\n    }\r\n\r\n    form {\r\n        margin: 18px 20px 50px 15px;\r\n        min-height: 80%;\r\n        text-align: left;\r\n    }\r\n\r\n    .box-input-user {\r\n        display: inline-block;\r\n    }\r\n\r\n    .box-input-name {\r\n        width: 90%;\r\n        margin-bottom: 7px;\r\n    }\r\n    \r\n    .box-input-phone {\r\n        width: 90%;\r\n        margin-left: 0%;\r\n    }\r\n\r\n    .wrapper-address {\r\n        display: inline-block;\r\n    }\r\n    \r\n    .box-input-address {\r\n        width: 90%;\r\n        margin-bottom: 7px;\r\n    }\r\n    \r\n    .box-input-number {\r\n        width: 90%;\r\n        margin-left: 0%;\r\n        margin-bottom: 7px;\r\n    }\r\n    \r\n    .box-input-optional {\r\n        width: 90%;\r\n        margin-left: 0%;\r\n    }\r\n\r\n    .box-itens {\r\n        width: 100%;\r\n    }\r\n\r\n    .box-payment {\r\n        display: inline-block;\r\n    }\r\n\r\n    .box-payment {\r\n        width: 100%;\r\n    }\r\n\r\n    .content-payment {\r\n        width: 100%;\r\n        padding-bottom: 18px;\r\n    }\r\n\r\n    .content-delivery {\r\n        width: 100%;\r\n    }\r\n\r\n    .button-back {\r\n        margin-right: 7px;\r\n    }\r\n\r\n    .box-footer {\r\n        width: 96.6%;\r\n    }\r\n}",
                    "styleUrl": "./order.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "orderService",
                        "type": "OrderService"
                    },
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder"
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "orderService",
                        "type": "OrderService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"body\">\r\n  <storybook-square-white>\r\n    <!-- {{ orderForm.valid }}\r\n    {{ orderForm.value | json }} -->\r\n    <form novalidate\r\n          [formGroup]=\"orderForm\">\r\n      <div class=\"box-header\">\r\n          <i class=\"fa fa-shopping-cart fa-lg\"></i>\r\n          <p>Finalize o seu pedido</p>\r\n      </div>\r\n\r\n      <div class=\"box-info-user\">\r\n        <p>Seus dados:</p>\r\n\r\n        <div class=\"box-input-user\">\r\n          <div class=\"box-input-name\">\r\n            <app-input-container  errorMessage=\"Campo obrigatório e com 5 caracteres.\"\r\n                                  label=\"Nome\">\r\n            <storybook-input  ngDefaultControl\r\n                              formControlName=\"name\"\r\n                              autocomplete=\"off\"\r\n                              placeHolder=\"Olá, qual seu nome? (ex. Jackson Neves)\">\r\n            </storybook-input>\r\n            </app-input-container>\r\n          </div>\r\n          <div class=\"box-input-phone\">\r\n            <app-input-container  errorMessage=\"Campo obrigatório e com 5 caracteres.\"\r\n                                  label=\"Telefone\">\r\n              <storybook-input  ngDefaultControl\r\n                                formControlName=\"phone\"\r\n                                autocomplete=\"off\"\r\n                                placeHolder=\"Qual seu telefone? (ex. 47 9 9934-2827)\">\r\n              </storybook-input>\r\n            </app-input-container>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"box-info-address\">\r\n        <p>Endereço de Entrega:</p>\r\n\r\n        <div class=\"wrapper-address\">\r\n          <div class=\"box-input-address\">\r\n            <app-input-container  label=\"Endereço\"\r\n                                  errorMessage=\"Campo obrigatório e com 5 caracteres.\">\r\n              <storybook-input  ngDefaultControl\r\n                                formControlName=\"address\"\r\n                                autocomplete=\"off\"\r\n                                placeHolder=\"Qual seu endereço?\">\r\n              </storybook-input>\r\n            </app-input-container>\r\n          </div>\r\n          <div class=\"box-input-number\">\r\n            <app-input-container  errorMessage=\"Obrigatório e somente números.\"\r\n                                  label=\"Número\">\r\n              <storybook-input  ngDefaultControl\r\n                                formControlName=\"number\"\r\n                                autocomplete=\"off\"\r\n                                placeHolder=\"Número\">\r\n              </storybook-input>\r\n            </app-input-container>\r\n          </div>\r\n          <div class=\"box-input-optional\">\r\n            <app-input-container label=\"Complemento\">\r\n              <storybook-input  ngDefaultControl\r\n                                formControlName=\"optionalAddress\"\r\n                                autocomplete=\"off\"\r\n                                placeHolder=\"Complemento\">\r\n              </storybook-input>\r\n            </app-input-container>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"box-itens\">\r\n        <div class=\"content-itens\">\r\n          <p>Itens do Pedido:</p>\r\n          \r\n          <app-order-items  [items]=\"cartItems()\"\r\n                            (increaseQty)=\"increaseQty($event)\"\r\n                            (decreaseQty)=\"decreaseQty($event)\"\r\n                            (remove)=\"removeItem($event)\">\r\n          </app-order-items>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"box-payment\">\r\n        <div class=\"content-payment\">\r\n          <p>Formas de Pagamento:</p>\r\n          <storybook-radio-button   [options]=\"paymentOptions\"\r\n                                    formControlName=\"paymentOption\">\r\n          </storybook-radio-button>\r\n        </div>\r\n\r\n        <div class=\"content-delivery\">\r\n          <p>Frete e Total:</p>\r\n          <app-delivery-costs [delivery]=\"delivery\"\r\n                              [itemsValue]=\"itemsValue()\">\r\n          </app-delivery-costs>\r\n        </div>\r\n      </div>\r\n    </form>\r\n\r\n    <div class=\"box-footer\">\r\n      <storybook-button fontBlack=\"true\"\r\n                        label=\"Voltar\"\r\n                        class=\"button-back\"\r\n                        [routerLink]=\"['/restaurant/jack-daniels']\">\r\n      </storybook-button>\r\n      <storybook-button primary=\"true\"\r\n                        icon=\"fa fa-credit-card\"\r\n                        label=\"Concluir Pedido\"\r\n                        (click)=\"checkOrder(orderForm.value)\"\r\n                        [disabled]=\"!orderForm.valid || cartItems().length === 0\"\r\n                        [routerLink]=\"['/order-summary']\">\r\n      </storybook-button>\r\n    </div>\r\n  </storybook-square-white>\r\n</div>"
        },
        {
            "name": "OrderItemsComponent",
            "id": "component-OrderItemsComponent-e30c83e07aaba1412be02a3d74d2c7ee",
            "file": "src/app/order/order-items/order-items.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-order-items",
            "styleUrls": [
                "./order-items.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./order-items.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "items",
                    "line": 12,
                    "type": "CartItem[]"
                }
            ],
            "outputsClass": [
                {
                    "name": "decreaseQty",
                    "defaultValue": "new EventEmitter<CartItem>()",
                    "line": 15,
                    "type": "EventEmitter"
                },
                {
                    "name": "increaseQty",
                    "defaultValue": "new EventEmitter<CartItem>()",
                    "line": 14,
                    "type": "EventEmitter"
                },
                {
                    "name": "remove",
                    "defaultValue": "new EventEmitter<CartItem>()",
                    "line": 16,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "emitDecreaseQty",
                    "args": [
                        {
                            "name": "item",
                            "type": "CartItem"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "CartItem",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emitIncreaseQty",
                    "args": [
                        {
                            "name": "item",
                            "type": "CartItem"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "CartItem",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emitRemove",
                    "args": [
                        {
                            "name": "item",
                            "type": "CartItem"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "CartItem",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { CartItem } from './../../restaurant-detail/shopping-cart/shopping-cart.model';\r\n\r\n@Component({\r\n  selector: 'app-order-items',\r\n  templateUrl: './order-items.component.html',\r\n  styleUrls: ['./order-items.component.css']\r\n})\r\nexport class OrderItemsComponent implements OnInit {\r\n\r\n  @Input() items: CartItem[];\r\n\r\n  @Output() increaseQty = new EventEmitter<CartItem>();\r\n  @Output() decreaseQty = new EventEmitter<CartItem>();\r\n  @Output() remove = new EventEmitter<CartItem>();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  emitIncreaseQty(item: CartItem) {\r\n    this.increaseQty.emit(item);\r\n  }\r\n\r\n  emitDecreaseQty(item: CartItem) {\r\n    this.decreaseQty.emit(item);\r\n  }\r\n\r\n  emitRemove(item: CartItem) {\r\n    this.remove.emit(item);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".tbody {\r\n    margin-bottom: 15px;\r\n}\r\n\r\na {\r\n    color: var(--color-primary-lighter);\r\n    cursor: pointer;\r\n}\r\n\r\na:hover {\r\n    font-weight: 600;\r\n    color: var(--color-primary-darker);\r\n}\r\n\r\n.th-qtd {\r\n    width: 4%;\r\n}\r\n\r\n.th-item {\r\n    width: 30%;\r\n}\r\n\r\n.th-description {\r\n    width: 50%;\r\n}\r\n\r\n.th-subtotal {\r\n    width: 10%;\r\n}\r\n\r\n.th-exclude {\r\n    width: 11%;\r\n}\r\n\r\n.tr {\r\n    width: 100%;\r\n    margin: 0;\r\n    padding: 0;\r\n}",
                    "styleUrl": "./order-items.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 16
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div *ngIf=\"!items.length\">\n  <p>\n    Não há itens no seus carrinho. Que tal começar por\n    <a [routerLink]=\"['/restaurant/jack-daniels']\"> aqui</a>?\n  </p>\n</div>\n  \n<div class=\"wrapper-items\" *ngIf=\"items.length\">\n  <table class=\"table table-striped\">\n    <thead>\n      <tr class=\"tr\">\n        <th class=\"th-qtd\">Qtd</th>\n        <th class=\"th-item\">Item</th>\n        <th class=\"th-description\">Descrição</th>\n        <th class=\"th-subtotal\">Subtotal</th>\n        <th class=\"th-exclude\"></th>\n      </tr>\n    </thead>\n\n    <tbody>\n      <tr class=\"content-items\" *ngFor=\"let item of items\">\n        <td class=\"text-center\">\n          {{ item.quantity }}\n        </td>\n        <td>\n          {{ item.menuItem.name }}\n        </td>\n        <td>\n          {{ item.menuItem.description }}\n        </td>\n        <td class=\"text-right\">\n          {{ item.value() | currency: 'BRL': 'symbol' }}\n        </td>\n        <td class=\"text-right\">\n          <a (click)=\"emitIncreaseQty(item)\" class=\"btn btn-sm\">\n            <i class=\"fa fa-plus\"></i>\n          </a>\n          <a (click)=\"emitDecreaseQty(item)\" class=\"btn btn-sm\">\n            <i class=\"fa fa-minus\"></i>\n          </a>\n          <a (click)=\"emitRemove(item)\" class=\"btn btn-sm danger\">\n            <i class=\"fa fa-remove\"></i>\n          </a>\n        </td>\n      </tr>\n    </tbody>\n\n  </table>\n</div>\n  "
        },
        {
            "name": "OrderSummaryComponent",
            "id": "component-OrderSummaryComponent-e1148333235aea5bcd1ffbeee4824267",
            "file": "src/app/order-summary/order-summary.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-order-summary",
            "styleUrls": [
                "./order-summary.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./order-summary.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "rated",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                },
                {
                    "name": "rate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-order-summary',\n  templateUrl: './order-summary.component.html',\n  styleUrls: ['./order-summary.component.css']\n})\nexport class OrderSummaryComponent implements OnInit {\n  rated: boolean;\n\n  constructor() { }\n\n  ngOnInit(): void { }\n  \n  rate() {\n    this.rated = true;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 90%;\r\n}\r\n.content {\r\n    text-align: center;\r\n}\r\nh1 {\r\n    color: var(--color-text-title);\r\n    margin-bottom: 15px;\r\n    font-size: xx-large;\r\n}\r\np {\r\n    color: var(--color-text-base);\r\n    padding: 2px;\r\n}\r\n.rating {\r\n    color: var(--color-primary-darker);\r\n    cursor: pointer;\r\n    font-size: xx-large;\r\n}\r\n\r\n@media (max-width: 1100px) {\r\n    .wrapper {\r\n        margin: 0 20px;\r\n    }\r\n}\r\n",
                    "styleUrl": "./order-summary.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<storybook-square-white classWrapper=\"true\">\n  <div class=\"wrapper\">\n    <div class=\"content\">\n      <h1>Pedido Conluído</h1>\n      \n      <p>\n        Seu pedido foi recebido pelo restaurante. Prepare a mesa que a comida está chegando!\n      </p>\n      <p *ngIf=\"!rated\">\n        <b>Avalie</b> sua experiência:\n      </p>\n      <p *ngIf=\"rated\">\n        Obrigado pela sua avaliação!\n      </p>\n      <p>\n        <storybook-rating (rated)=\"rate()\" class=\"rating\">\n        </storybook-rating>\n      </p>\n    </div>\n  </div>\n</storybook-square-white>\n  "
        },
        {
            "name": "RadioButtonComponent",
            "id": "component-RadioButtonComponent-f42f19ff9486a5478c4720b7a3d3c431",
            "file": "src/stories/components/radio-button/radio-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => RadioButtonComponent), multi: true\n}",
                    "type": "component"
                }
            ],
            "selector": "storybook-radio-button",
            "styleUrls": [
                "./radio-button.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./radio-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "options",
                    "line": 20,
                    "type": "RadioOption[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "onChange",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "value",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean"
                        }
                    ],
                    "optional": true,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { RadioOption } from './radio-option.model';\n\n@Component({\n  selector: 'storybook-radio-button',\n  templateUrl: './radio-button.component.html',\n  styleUrls: ['./radio-button.component.css'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => RadioButtonComponent),\n      multi: true\n    }\n  ]\n})\nexport class RadioButtonComponent implements OnInit, ControlValueAccessor {\n\n  @Input() options: RadioOption[];\n\n  value: any;\n  onChange: any;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  setValue(value: any) {\n    this.value = value;\n    this.onChange(this.value);\n  }\n\n  writeValue(obj: any): void {\n    this.value = obj;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void { }\n\n  setDisabledState?(isDisabled: boolean): void { }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "div {\r\n    width: 100%;\r\n    height: 22px;\r\n    padding: 0;\r\n    margin: 0;\r\n    color: var(--color-text-base);\r\n}\r\n\r\ninput {\r\n    padding: 0;\r\n    margin: 0;\r\n}\r\n\r\n\r\ninput[type='radio']:after {\r\n    width: 15px;\r\n    height: 15px;\r\n    border-radius: 15px;\r\n    top: -2px;\r\n    left: -2px;\r\n    position: relative;\r\n    background-color: var(--color-box-white);\r\n    border: 1px solid var(--color-text-complement);\r\n    content: '';\r\n    display: inline-block;\r\n    visibility: visible;\r\n    cursor: pointer;\r\n}\r\n\r\ninput[type='radio']:checked:after {\r\n    width: 17px;\r\n    height: 17px;\r\n    border-radius: 15px;\r\n    top: -2px;\r\n    left: -2px;\r\n    position: relative;\r\n    background-color: var(--color-primary-light);\r\n    content: '';\r\n    display: inline-block;\r\n    visibility: visible;\r\n    border: 1px solid var(--color-box-white);\r\n}\r\n\r\nspan {\r\n    margin-left: 7px;\r\n    padding: 0;\r\n}\r\n\r\n@media (max-width: 1100px) {\r\n    input[type='radio']:after {\r\n        top: -2px;\r\n        left: -2px;\r\n    }\r\n    \r\n    input[type='radio']:checked:after {\r\n        top: -2px;\r\n        left: -2px;\r\n    }\r\n}",
                    "styleUrl": "./radio-button.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 23
            },
            "implements": [
                "OnInit",
                "ControlValueAccessor"
            ],
            "templateData": "<div *ngFor=\"let option of options\">\n  <input  (click)=\"setValue(option.value)\"\n          [class.checked]=\"option.value === value\"\n          aria-checked=\"false\"\n          aria-disabled=\"false\"\n          type=\"radio\"\n          name=\"option.value\"\n          value=\"option.value\"/>\n  <span>\n    {{ option.label }}\n  </span>\n</div>\n"
        },
        {
            "name": "RatingComponent",
            "id": "component-RatingComponent-85fe07a3b1fc867cd830f31233214c56",
            "file": "src/stories/components/rating/rating.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-rating",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./rating.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "rated",
                    "defaultValue": "new EventEmitter<number>()",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "previusRate",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "rate",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "rates",
                    "defaultValue": "[1, 2, 3, 4, 5]",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "clearTemporaryRate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                },
                {
                    "name": "setRate",
                    "args": [
                        {
                            "name": "r",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "jsdoctags": [
                        {
                            "name": "r",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setTemporaryRate",
                    "args": [
                        {
                            "name": "r",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "jsdoctags": [
                        {
                            "name": "r",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'storybook-rating',\n  templateUrl: './rating.component.html'\n})\nexport class RatingComponent implements OnInit {\n\n  rates: number[] = [1, 2, 3, 4, 5];\n  rate = 0;\n  previusRate: number;\n\n  @Output() rated = new EventEmitter<number>();\n\n  constructor() { }\n\n  ngOnInit(): void {}\n\n  setRate(r: number) {\n    this.rate = r;\n    this.previusRate = undefined;\n    this.rated.emit(this.rate);\n  }\n\n  setTemporaryRate(r: number) {\n    if (this.previusRate === undefined) {\n      this.previusRate = this.rate;\n    }\n    this.rate = r;\n  }\n\n  clearTemporaryRate() {\n    if (this.previusRate !== undefined) {\n      this.rate = this.previusRate;\n      this.previusRate = undefined;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<i  *ngFor=\"let r of rates\"\n    class=\"fa\"\n    [class.fa-star]=\"r <= rate\"\n    [class.fa-star-o]=\"r > rate\"\n    (click)=\"setRate(r)\"\n    (mouseenter)=\"setTemporaryRate(r)\"\n    (mouseleave)=\"clearTemporaryRate()\">\n</i>\n"
        },
        {
            "name": "RestaurantDetailComponent",
            "id": "component-RestaurantDetailComponent-534676130983edf672475bacd29f54ef",
            "file": "src/app/restaurant-detail/restaurant-detail.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-restaurant-detail",
            "styleUrls": [
                "./restaurant-detail.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./restaurant-detail.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "restaurant",
                    "type": "Restaurant",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "getDB",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40
                },
                {
                    "name": "mockDB",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { VILLE_API } from './../app.api';\nimport { Restaurant } from './restaurant.model';\n\n@Component({\n  selector: 'app-restaurant-detail',\n  templateUrl: './restaurant-detail.component.html',\n  styleUrls: ['./restaurant-detail.component.css']\n})\nexport class RestaurantDetailComponent implements OnInit {\n  restaurant: Restaurant;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    let db = false;\n\n    if (db) {\n      this.getDB();\n    } else {\n      this.mockDB();\n    }\n  }\n\n  mockDB() {\n    this.restaurant = {\n      \"id\": \"jack-daniels\",\n      \"name\": \"Jack Daniel's\",\n      \"category\": \"Whisky\",\n      \"deliveryEstimate\": \"25m\",\n      \"rating\": 9.9,\n      \"imagePath\": \"assets/img/restaurants/jack-daniels.png\",\n      \"about\": \"Mais de 150 anos se passaram desde que Nearest e Jack começaram a fazer whiskey juntos e, até hoje, sempre houve um membro da família Green trabalhando na Destilaria Jack Daniel.\",\n      \"hours\": \"Funciona de segunda à segunda, de 00h às 23h\"\n    }\n  }\n\n  getDB() {\n    this.http\n      .get<Restaurant>(`${VILLE_API}/restaurants/bread-bakery`)\n      .subscribe( restaurant => this.restaurant = restaurant );\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".box-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    border-bottom: 1px solid rgba(0, 0.1, 0, 0.05);\r\n}\r\n.box-header-title {\r\n    display: flex;\r\n    padding: 10px;\r\n}\r\n.box-header-title > a > i {\r\n    color: var(--color-text-title);\r\n    margin-right: 5px;\r\n    margin-top: 0.3px;\r\n}\r\n.box-header-title > a > i:hover {\r\n    color: var(--color-primary-darker);\r\n}\r\n.box-header-title > p {\r\n    color: var(--color-text-complement);\r\n}\r\n.box-header-title > a {\r\n    color: var(--color-text-title);\r\n}\r\n.box-body {\r\n    display: flex;\r\n    padding: 25px;\r\n}\r\n.box-img-detail {\r\n    width: 250px;\r\n}\r\n.box-body-information {\r\n    text-align: justify;\r\n    padding: 10px 0 0 15px;\r\n}\r\n.box-body-information > dt {\r\n    padding-bottom: 7px;\r\n    font-size: large;\r\n    font-weight: 600;\r\n}\r\n.box-body-information > dd {\r\n    padding: 0 20px 15px 0px;\r\n    color: var(--color-text-base);\r\n}\r\n.box-footer {\r\n    display: flex;\r\n    font-size: large;\r\n}\r\n.box-footer > a {\r\n    border-top: 1px solid var(--color-background);\r\n    color: var(--color-text-title);\r\n    font-weight: 600;\r\n    text-decoration: none;\r\n    width: 50%;\r\n    padding: 8px 0;\r\n\r\n    /* Impedir seleção do texto. */\r\n    -webkit-touch-callout: none;\r\n    -webkit-user-select: none;\r\n    -khtml-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n}\r\n.box-footer > a:hover {\r\n    color: var(--color-primary-darker);\r\n}\r\n.detail-active {\r\n    width: 50%;\r\n    border-bottom: 2px solid var(--color-primary-darker);\r\n    border-radius: 2px;\r\n}\r\n\r\n@media (max-width: 1100px) {\r\n    .box-body {\r\n        display: inline;\r\n    }\r\n    .box-img-detail {\r\n        width: 200px;\r\n    }\r\n}\r\n  ",
                    "styleUrl": "./restaurant-detail.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<storybook-square-white>\n  <div>\n    <div class=\"box-header\">\n      <span class=\"box-header-title\">\n        <a [routerLink]=\"['/']\">\n          <i class=\"fa fa-home\"></i>\n        </a>\n        <p>{{ restaurant?.name }}</p>\n      </span>\n    \n      <span class=\"box-header-title\">\n        <a [routerLink]=\"['/restaurant/jack-daniels/reviews']\">\n          <i class=\"fa fa-star\"></i>\n        </a>\n        <p>{{ restaurant?.rating }}</p>\n      </span>\n    </div>\n    \n    <div class=\"box-body\">\n      <div *ngIf=\"restaurant\">\n          <img class=\"box-img-detail\" [src]=\"restaurant?.imagePath\" />\n      </div>\n\n      <dl class=\"box-body-information\">\n        <dt>Categoria</dt>\n        <dd>{{ restaurant?.category }}</dd>\n        <dt>Quem somos</dt>\n        <dd>{{ restaurant?.about }}</dd>\n        <dt>Horários</dt>\n        <dd>{{ restaurant?.hours}}</dd>\n      </dl>\n    </div>\n    \n    <div class=\"box-footer\">\n      <a routerLinkActive=\"detail-active\" [routerLink]=\"['menu']\">\n        Menu\n      </a>\n\n      <a routerLinkActive=\"detail-active\" [routerLink]=\"['reviews']\">\n        Avaliações\n      </a>\n    </div>\n  </div>\n</storybook-square-white>\n\n<div class=\"row\">\n  <router-outlet></router-outlet>\n</div>\n  "
        },
        {
            "name": "ReviewsComponent",
            "id": "component-ReviewsComponent-750628adb2c8a59bec2661e039cb2fe0",
            "file": "src/app/restaurant-detail/reviews/reviews.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-reviews",
            "styleUrls": [
                "./reviews.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./reviews.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "reviews",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "getDB",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30
                },
                {
                    "name": "mockDB",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Observable } from 'rxjs';\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\n\nimport { VILLE_API } from './../../app.api';\nimport { Restaurant } from '../restaurant.model';\n\n@Component({\n  selector: 'app-reviews',\n  templateUrl: './reviews.component.html',\n  styleUrls: ['./reviews.component.css']\n})\nexport class ReviewsComponent implements OnInit {\n  // reviews: Observable<any>;\n  reviews: any;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    let db = false;\n\n    if (db) {\n      this.getDB();\n    } else {\n      this.mockDB();\n    }\n  }\n\n  getDB() {\n    this.reviews = this.http\n      .get<Restaurant>(`${VILLE_API}/restaurants/bread-bakery/reviews`)\n      .pipe(tap(console.log));\n  }\n\n  mockDB() {\n    this.reviews = [\n      {\n        \"name\": \"Julia\",\n        \"date\": \"2017-01-23T18:25:43\",\n        \"rating\": 4.5,\n        \"comments\": \"Tudo muito bom, entrega no tempo certo\",\n        \"restaurantId\": \"bread-bakery\"\n      },\n      {\n        \"name\": \"Aline\",\n        \"date\": \"2016-12-12T18:25:43\",\n        \"rating\": 3,\n        \"comments\": \"NÃO recomendo. O recheio é só um creme, não tem camarão e nem carne\",\n        \"restaurantId\": \"bread-bakery\"\n      },\n      {\n        \"name\": \"Jackson Luís Peres das Neves\",\n        \"date\": \"2016-12-12T18:25:43\",\n        \"rating\": 2,\n        \"comments\": \"Não foi muito agradável ao nosso paladar, e eu e meu esposo no outro dia passamos super mal. Pode até ter sido outra coisa, mas...\",\n        \"restaurantId\": \"bread-bakery\"\n      },\n      {\n        \"name\": \"Renata\",\n        \"date\": \"2016-12-12T18:25:43\",\n        \"rating\": 5,\n        \"comments\": \"Nunca deixou na mão, comida sempre deliciosa.\",\n        \"restaurantId\": \"bread-bakery\"\n      }\n    ];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\r\n    margin: 12px 0 20px 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\nsection > div {\r\n    width: 72%;\r\n    text-align: center;\r\n}\r\n.content {\r\n    margin: 1px;\r\n    padding: 7px;\r\n    display: inline-block;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 48%;\r\n}\r\n.box-header {\r\n    border-bottom: 1px solid var(--color-background);\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 10px 10px 2px 10px;\r\n}\r\n.box-info {\r\n    display: flex;\r\n}\r\n.img-circle {\r\n    width: 45px;\r\n    height: 45px;\r\n}\r\n.box-user-date {\r\n    padding: 3px 0 0 6px;\r\n    display: grid;\r\n    text-align: center;\r\n}\r\n.username {\r\n    padding-top: 5px;\r\n    margin-bottom: -3px;\r\n    font-weight: 600;\r\n    color: var(--color-text-title);\r\n}\r\n.date {\r\n    font-size: 12px;\r\n    color: var(--color-text-complement);\r\n    margin-top: -5px;\r\n}\r\n.review-score {\r\n    font-weight: 600;\r\n    font-size: 30px;\r\n    color: var(--color-text-title);\r\n}\r\n.review-score:hover {\r\n    color: var(--color-primary-darker);\r\n}\r\n.box-comment {\r\n    min-height: 50px;\r\n    padding: 13px;\r\n    text-align: left;\r\n}\r\n\r\n@media (max-width: 1100px) {\r\n    section > div {\r\n        width: 100%;\r\n        text-align: center;\r\n    }\r\n    .content {\r\n        margin: 1px 0;\r\n        padding: 1px 0;\r\n        display: inline-block;\r\n        justify-content: center;\r\n        align-items: center;\r\n        width: 100%;\r\n    }\r\n    .box-info {\r\n        max-width: 83%;\r\n        padding: 0;\r\n        margin: 0;\r\n    }\r\n    .username {\r\n        margin-bottom: 0;\r\n    }\r\n    .date {\r\n        margin-top: 1px;\r\n    }\r\n    .review-score {\r\n        max-width: 30%;\r\n        padding: 0;\r\n        margin: 0;\r\n    }\r\n}\r\n",
                    "styleUrl": "./reviews.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient"
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section>\n  <div>\n    <div class=\"content\"\n    *ngFor=\"let review of reviews\">\n    <!-- *ngFor=\"let review of reviews | async\" -->\n      <storybook-square-white classContent=\"content content-width-10\">\n        <div class=\"box-header\">\n          <div class=\"box-info\">\n            <img\n              *ngIf=\"review.rating < 3\"\n              alt=\"User Image\"\n              class=\"img-circle\"\n              src=\"assets/img/reactions/pissed.png\"\n            >\n            <img\n              *ngIf=\"review.rating >= 3 && review.rating < 4\"\n              alt=\"User Image\"\n              class=\"img-circle\"\n              src=\"assets/img/reactions/soso.png\"\n            >\n            <img\n              *ngIf=\"review.rating >= 4\"\n              alt=\"User Image\"\n              class=\"img-circle\"\n              src=\"assets/img/reactions/loved.png\"\n            >\n            <div class=\"box-user-date\">\n              <span class=\"username\">\n                {{ review.name }}\n              </span>\n              <span class=\"date\">\n                {{ review.date | date:'dd/MM/yyyy'}}\n              </span>\n            </div>\n          </div>\n          <span class=\"review-score\">\n            <i class=\"fa fa-star\"></i>\n            {{ review.rating }}\n          </span>\n        </div>\n        <div class=\"box-comment\">\n          <p>{{ review.comments }}</p>\n        </div>\n      </storybook-square-white>\n    </div>\n  </div>\n</section>\n"
        },
        {
            "name": "ShoppingCartComponent",
            "id": "component-ShoppingCartComponent-9c1a10041055f35f4f4bca4b5a06974c",
            "file": "src/app/restaurant-detail/shopping-cart/shopping-cart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-shopping-cart",
            "styleUrls": [
                "./shopping-cart.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./shopping-cart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "rowState",
                    "defaultValue": "'ready'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "methodsClass": [
                {
                    "name": "addItem",
                    "args": [
                        {
                            "name": "item",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40
                },
                {
                    "name": "items",
                    "args": [],
                    "optional": false,
                    "returnType": "any[]",
                    "typeParameters": [],
                    "line": 36
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33
                },
                {
                    "name": "removeItem",
                    "args": [
                        {
                            "name": "item",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "total",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 52
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { trigger, transition, state, style, animate, keyframes } from '@angular/animations';\n\nimport { ShoppingCartService } from './shopping-cart.service';\n\n@Component({\n  selector: 'app-shopping-cart',\n  templateUrl: './shopping-cart.component.html',\n  styleUrls: ['./shopping-cart.component.css'],\n  preserveWhitespaces: true,\n  animations: [\n    trigger('row', [\n      state('ready', style({ opacity: 1 })),\n      transition('void => ready', animate('300ms 0s ease-in', keyframes([\n        style({ opacity: 0, transform: 'translateX(-30px)', offset: 0}),\n        style({ opacity: 0.8, transform: 'translateX(10px)', offset: 0.8}),\n        style({ opacity: 1, transform: 'translateX(0px)', offset: 1})\n      ]))),\n      transition('ready => void', animate('300ms 0s ease-out', keyframes([\n        style({ opacity: 1, transform: 'translateX(0px)', offset: 0}),\n        style({ opacity: 0.8, transform: 'translateX(-10px)', offset: 0.2}),\n        style({ opacity: 0, transform: 'translateX(30px)', offset: 1})\n      ])))\n    ])\n  ]\n})\nexport class ShoppingCartComponent implements OnInit {\n\n  rowState = 'ready';\n\n  constructor(private shoppingCartService: ShoppingCartService) { }\n\n  ngOnInit() {\n  }\n\n  items(): any[] {\n    return this.shoppingCartService.items;\n  }\n\n  clear() {\n    this.shoppingCartService.clear();\n  }\n\n  removeItem(item: any) {\n    this.shoppingCartService.removeItem(item);\n  }\n\n  addItem(item: any) {\n    this.shoppingCartService.addItem(item);\n  }\n\n  total(): number {\n    return this.shoppingCartService.total();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\r\n    margin-left: 6%;\r\n}\r\n.box-header {\r\n    display: flex;\r\n    color: var(--color-text-base);\r\n    padding-bottom: 10px;\r\n    border-bottom: 1px solid var(--color-background);\r\n}\r\n.box-header > i {\r\n    font-size: x-large !important;\r\n    padding: 10px 0 0 10px;\r\n}\r\n.box-header > h3 {\r\n    color: var(--color-text-complement);\r\n    font-weight: 400;\r\n    padding: 14px 0 0 10px;\r\n}\r\n.box-body-empty {\r\n    min-height: 80px;\r\n}\r\n.box-body > div {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n.table-responsive {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 10px 10px 10px 0;\r\n}\r\n.table {\r\n    width: 90%;\r\n}\r\n.tb-itens {\r\n    text-align: left;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    width: 100%;\r\n    padding: 2px 0;\r\n}\r\n.tb-name {\r\n    width: 60%;\r\n}\r\n.tb-price {\r\n    width: 36%;\r\n}\r\n.tb-icon {\r\n    width: 4%;\r\n    color: tomato;\r\n    cursor: pointer;\r\n}\r\n.tb-icon:hover {\r\n    color: var(--color-primary-darker);\r\n}\r\n.total {\r\n    display: flex;\r\n    height: 15%;\r\n    padding: 35px 0 8px 0;\r\n}\r\n.total > p {\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    color: var(--color-text-title);\r\n}\r\n.total > span {\r\n    color: var(--color-text-base);\r\n}\r\n.box-footer {\r\n    text-align: right;\r\n    padding: 0 15px 13px 0;\r\n}\r\n\r\n@media (max-width: 1100px) {\r\n    .box-body {\r\n        display: inline;\r\n    }\r\n    section {\r\n        margin: 5% 0 0 0;\r\n    }\r\n}\r\n",
                    "styleUrl": "./shopping-cart.component.css"
                }
            ],
            "stylesData": "",
            "preserveWhitespaces": true,
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "shoppingCartService",
                        "type": "ShoppingCartService"
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "shoppingCartService",
                        "type": "ShoppingCartService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section>\r\n  <storybook-square-white classContent=\"content content-width-10\">\r\n    <div class=\"wrapper\">\r\n      <div class=\"box-header\">\r\n        <i class=\"fa fa-shopping-cart\"></i>\r\n    \r\n        <h3 class=\"box-title\">Carrinho</h3>\r\n      </div>\r\n    \r\n      <div class=\"box-body\">\r\n        <div class=\"box-body-empty\" *ngIf=\"!items().length\">\r\n          <p>\r\n            Seu carrinho está vazio!\r\n          </p>\r\n        </div>\r\n        <div  class=\"table-responsive\"\r\n              *ngIf=\"items().length\">\r\n            <div class=\"table\">\r\n              <div *ngFor=\"let item of items()\"\r\n                  [@row]=\"rowState\"\r\n                  class=\"tb-itens\">\r\n                <p class=\"tb-name\">\r\n                  ({{ item.quantity }}x)\r\n                  {{ item.menuItem.name }}\r\n                </p>\r\n    \r\n                <p class=\"tb-price\">\r\n                  {{ item.value() | currency: 'BRL': 'symbol'}}\r\n                </p>\r\n    \r\n                <a class=\"tb-icon\" (click)=\"removeItem(item)\">\r\n                  <i class=\"fa fa-remove\"></i>\r\n                </a>\r\n              </div>\r\n              <div class=\"total\">\r\n                <p>Total:</p>\r\n    \r\n                <span>\r\n                  {{ total() | currency: 'BRL': 'symbol' }}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n      </div>\r\n      <div class=\"box-footer\" *ngIf=\"items().length\">\r\n        <storybook-button fontBlack=\"true\"\r\n                          icon=\"fa fa-trash\"\r\n                          size=\"small\"\r\n                          label=\"Limpar\"\r\n                          (click)=\"clear()\">\r\n        </storybook-button>\r\n        <storybook-button primary=\"true\"\r\n                          icon=\"fa fa-credit-card\"\r\n                          size=\"small\"\r\n                          label=\"Fechar Pedido\"\r\n                          [routerLink]=\"['/order']\">\r\n        </storybook-button>\r\n      </div>\r\n    </div>\r\n  </storybook-square-white>\r\n</section>"
        },
        {
            "name": "SnackbarComponent",
            "id": "component-SnackbarComponent-4e9a3020530143c23db86edfb99df870",
            "file": "src/app/shared/messages/snackbar/snackbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-snackbar",
            "styleUrls": [
                "./snackbar.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./snackbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "message",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "snackVisibility",
                    "defaultValue": "'hidden'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 35
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { timer } from 'rxjs';\nimport { NotificationService } from './../notification.service';\nimport { Component, OnInit } from '@angular/core';\nimport { state, style, trigger, transition, animate } from '@angular/animations';\nimport { tap, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.css'],\n  animations: [\n    trigger('snack-visibility', [\n      state('hidden', style({\n        opacity: 0,\n        bottom: 0\n      })),\n      state('visible', style({\n        opacity: 1,\n        bottom: '30px'\n      })),\n      transition(\n        'hidden => visible',\n        animate('500ms 0s ease-in')\n      ),\n      transition(\n        'visible => hidden',\n        animate('500ms 0s ease-out')\n      )\n    ])\n  ]\n})\nexport class SnackbarComponent implements OnInit {\n\n  message: string;\n  snackVisibility = 'hidden';\n\n  constructor(private notificationService: NotificationService) { }\n\n  ngOnInit(): void {\n    this.notificationService.notifier\n      .pipe(\n        tap(message => {\n          this.message = message;\n          this.snackVisibility = 'visible';\n        }), switchMap(message => timer(2000))\n      ).subscribe(timer => this.snackVisibility = 'hidden');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".snackbar {\r\n  min-width: 400px;\r\n  background-color: var(--color-primary-darker);\r\n  color: var(--color-title-in-primary);\r\n  text-align: center;\r\n  border-radius: 2px;\r\n  padding: 16px 0;\r\n  position: fixed;\r\n  z-index: 1;\r\n  left: 35%;\r\n  bottom: 30px;\r\n}\r\n  \r\n@media (max-width: 1100px) {\r\n  .snackbar {\r\n    width: 100%;\r\n    padding: 16px 0;\r\n    left: 0;\r\n    bottom: 30px;\r\n    position: fixed;\r\n  }\r\n}",
                    "styleUrl": "./snackbar.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "notificationService",
                        "type": "NotificationService"
                    }
                ],
                "line": 35,
                "jsdoctags": [
                    {
                        "name": "notificationService",
                        "type": "NotificationService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"snackbar\" [@snack-visibility]=\"snackVisibility\">\n  {{ message }}\n</div>\n  "
        },
        {
            "name": "SquareWhiteComponent",
            "id": "component-SquareWhiteComponent-870256084fa5e073e68c92e3d9b191aa",
            "file": "src/stories/components/square-white/square-white.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-square-white",
            "styleUrls": [
                "./square-white.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./square-white.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "classContent",
                    "defaultValue": "'content'",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "classWrapper",
                    "defaultValue": "false",
                    "line": 10
                },
                {
                    "name": "storyBookView",
                    "defaultValue": "true",
                    "line": 9,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-square-white',\r\n  templateUrl: './square-white.component.html',\r\n  styleUrls: ['./square-white.component.css']\r\n})\r\nexport class SquareWhiteComponent implements OnInit {  \r\n  @Input() storyBookView: boolean = true;\r\n  @Input() classWrapper = false;\r\n  @Input() classContent: string = 'content';\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.classWrapper ? 'wrapper-height' : 'wrapper';\r\n\r\n    return ['wrapper', mode];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\r\n    width: 100%;\r\n    display: flex;\r\n    text-align: center;\r\n    justify-content: center;\r\n}\r\n.wrapper-height {\r\n    height: 100%;\r\n}\r\n.content {\r\n    background-color: var(--color-box-footer);\r\n    border: 1px solid rgba(0, 0.3, 0, 0);\r\n    border-radius: 6px; \r\n    height: 90%;\r\n    width: 70%;\r\n    box-shadow: 0 2px 0 0 rgba(0, 0, 0, 0.1);\r\n}\r\n.content:hover {\r\n    background-color: var(--color-box-hover);\r\n}\r\n.content-width-10 {\r\n    width: 100% !important;\r\n}\r\n.content-width-9 {\r\n    width: 90% !important;\r\n}\r\n.content-width-8 {\r\n    width: 80% !important;\r\n}\r\n\r\n@media (max-width: 1100px) {\r\n    .content {\r\n        width: 90% !important;\r\n    }\r\n}\r\n",
                    "styleUrl": "./square-white.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 17
                    }
                }
            },
            "templateData": "<section class=\"wrapper\" [ngClass]=\"classes\">\r\n    <div [class]=\"classContent\">\r\n        <div [hidden]=\"storyBookView\">\r\n            <br><br><br><br><br><br><br><br>\r\n            <br><br><br><br><br><br><br><br>\r\n        </div>\r\n        <ng-content>\r\n        </ng-content>\r\n    </div>\r\n</section>"
        }
    ],
    "modules": [
        {
            "name": "AboutModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AboutComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "CardItemComponent"
                        },
                        {
                            "name": "FooterComponent"
                        },
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "HomeComponent"
                        },
                        {
                            "name": "MenuComponent"
                        },
                        {
                            "name": "NotFoundComponent"
                        },
                        {
                            "name": "OrderSummaryComponent"
                        },
                        {
                            "name": "RestaurantDetailComponent"
                        },
                        {
                            "name": "ReviewsComponent"
                        },
                        {
                            "name": "ShoppingCartComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ComponentsModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "RadioButtonComponent"
                        },
                        {
                            "name": "RatingComponent"
                        },
                        {
                            "name": "SquareWhiteComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "RadioButtonComponent"
                        },
                        {
                            "name": "RatingComponent"
                        },
                        {
                            "name": "SquareWhiteComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OrderModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DeliveryCostsComponent"
                        },
                        {
                            "name": "OrderComponent"
                        },
                        {
                            "name": "OrderItemsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "InputComponent"
                        },
                        {
                            "name": "SnackbarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "InputComponent"
                        },
                        {
                            "name": "SnackbarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  api: 'http://localhost:3000'\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\n  production: true,\n  api: 'http://localhost:3000'\n}"
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/button/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Input",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/input/Input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "InputPlaceHolder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/input/Input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/button/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/button/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "RadioButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/radio-button/RadioButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Rating",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/rating/Rating.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/button/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SecondaryFontBlack",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/button/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/button/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SquareWhite",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/square-white/Square-white.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SquareWhiteFullWidth",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/square-white/Square-white.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/button/Button.stories.ts",
                "type": "Story<ButtonComponent>",
                "defaultValue": "(args: ButtonComponent) => ({\n  component: ButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/radio-button/RadioButton.stories.ts",
                "type": "Story<RadioButtonComponent>",
                "defaultValue": "(args: RadioButtonComponent) => ({\r\n  component: RadioButtonComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/rating/Rating.stories.ts",
                "type": "Story<RatingComponent>",
                "defaultValue": "(args: RatingComponent) => ({\r\n  component: RatingComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/square-white/Square-white.stories.ts",
                "type": "Story<SquareWhiteComponent>",
                "defaultValue": "(args: SquareWhiteComponent) => ({\n  component: SquareWhiteComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/input/Input.stories.ts",
                "type": "Story<InputComponent>",
                "defaultValue": "(args: InputComponent) => ({\r\n  component: InputComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "VILLE_API",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.api.ts",
                "type": "",
                "defaultValue": "environment.api"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  api: 'http://localhost:3000'\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n  api: 'http://localhost:3000'\n}"
                }
            ],
            "src/stories/components/button/Button.stories.ts": [
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/button/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/button/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/button/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/button/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SecondaryFontBlack",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/button/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/button/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/button/Button.stories.ts",
                    "type": "Story<ButtonComponent>",
                    "defaultValue": "(args: ButtonComponent) => ({\n  component: ButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/components/input/Input.stories.ts": [
                {
                    "name": "Input",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/input/Input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "InputPlaceHolder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/input/Input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/input/Input.stories.ts",
                    "type": "Story<InputComponent>",
                    "defaultValue": "(args: InputComponent) => ({\r\n  component: InputComponent,\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/components/radio-button/RadioButton.stories.ts": [
                {
                    "name": "RadioButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/radio-button/RadioButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/radio-button/RadioButton.stories.ts",
                    "type": "Story<RadioButtonComponent>",
                    "defaultValue": "(args: RadioButtonComponent) => ({\r\n  component: RadioButtonComponent,\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/components/rating/Rating.stories.ts": [
                {
                    "name": "Rating",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/rating/Rating.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/rating/Rating.stories.ts",
                    "type": "Story<RatingComponent>",
                    "defaultValue": "(args: RatingComponent) => ({\r\n  component: RatingComponent,\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/components/square-white/Square-white.stories.ts": [
                {
                    "name": "SquareWhite",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/square-white/Square-white.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SquareWhiteFullWidth",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/square-white/Square-white.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/square-white/Square-white.stories.ts",
                    "type": "Story<SquareWhiteComponent>",
                    "defaultValue": "(args: SquareWhiteComponent) => ({\n  component: SquareWhiteComponent,\n  props: args,\n})"
                }
            ],
            "src/app/app.api.ts": [
                {
                    "name": "VILLE_API",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.api.ts",
                    "type": "",
                    "defaultValue": "environment.api"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "kind": "component",
                "component": "HomeComponent",
                "path": ""
            },
            {
                "kind": "component",
                "component": "RestaurantDetailComponent",
                "path": "restaurant/:id"
            },
            {
                "kind": "component",
                "component": "OrderSummaryComponent",
                "path": "order-summary"
            },
            {
                "kind": "component",
                "component": "NotFoundComponent",
                "path": "**"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/about/about.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AboutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "VILLE_API",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/not-found/not-found.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotFoundComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/order-summary/order-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OrderSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/order/delivery-costs/delivery-costs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DeliveryCostsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/order/order-items/order-items.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OrderItemsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/order/order.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OrderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/order/order.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Order",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/order/order.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "OrderItem",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/order/order.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OrderService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/restaurant-detail/menu/card-item/card-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/restaurant-detail/menu/menu-item.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MenuItem",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/restaurant-detail/menu/menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/restaurant-detail/restaurant-detail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RestaurantDetailComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/restaurant-detail/restaurant.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Restaurant",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/restaurant-detail/reviews/reviews.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReviewsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/restaurant-detail/shopping-cart/shopping-cart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ShoppingCartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/restaurant-detail/shopping-cart/shopping-cart.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CartItem",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/restaurant-detail/shopping-cart/shopping-cart.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ShoppingCartService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/messages/notification.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "NotificationService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/messages/snackbar/snackbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SnackbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Icon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SecondaryFontBlack",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/input/Input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Input",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/input/Input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InputPlaceHolder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/input/Input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/radio-button/RadioButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RadioButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/radio-button/RadioButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/radio-button/radio-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/radio-button/radio-option.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "RadioOption",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/rating/Rating.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Rating",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/rating/Rating.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/rating/rating.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RatingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/square-white/Square-white.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SquareWhite",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/square-white/Square-white.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SquareWhiteFullWidth",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/square-white/Square-white.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/square-white/square-white.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SquareWhiteComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}